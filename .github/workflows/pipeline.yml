# This is a basic workflow to help you get started with Actions
name: Library CI

# Controls when the workflow will run
on:
  pull_request:
    paths:
    - "**.py"
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.1-alpine3.16
        env:
          POSTGRES_USER: eugene_sofa
          POSTGRES_PASSWORD: DB_PASS
          POSTGRES_DB: ONLINE_CINEMA
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5434:5432
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
    - name: Install poetry
      run: curl -sSL https://install.python-poetry.org | python3 -

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "poetry"

    - name: Install Dependencies
      working-directory: ./app
      run: poetry install

    - name: Codestyle check
      working-directory: ./app
      run: poetry run pre-commit run --all-files

    - name: Check types by pyright
      run: |
        poetry run pyright
