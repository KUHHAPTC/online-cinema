# General Settings
# daemonize yes
# pidfile /var/run/redis.pid
# supervised no

# Networking
# bind 127.0.0.1
# protected-mode yes
# port 6379
# tcp-backlog 511
# timeout 0
# tcp-keepalive 300

# Security
# requirepass yourStrongPassword
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command CONFIG ""
# aclfile /etc/redis/aclfile.conf

# Events, add events only for EXPIRE && (DEL) COMMANDS
notify-keyspace-events Ex

# Persistence
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Replication
# replicaof <masterip> <masterport>
# masterauth <master-password>
# replica-read-only yes
# repl-diskless-sync no
# repl-diskless-sync-delay 5
# repl-disable-tcp-nodelay no
# repl-backlog-size 1mb
# repl-backlog-ttl 3600
# replica-priority 100
# replica-announce-ip <replica-ip>
# replica-announce-port <replica-port>

# Memory Management
maxmemory 1024mb
# Eviction Policies: noeviction, allkeys-lru, volatile-lru, ...
maxmemory-policy noeviction
# Directive tells Redis how many keys to sample in each eviction attempt.
maxmemory-samples 5

# Perform the eviction of keys in a lazy manner, freeing the memory associated with keys to be evicted in a separate thread
lazyfree-lazy-eviction no
# Expire keys and free their memory in a background thread
lazyfree-lazy-expire no
# the DEL command to asynchronously free large objects, thereby not blocking the server.
lazyfree-lazy-server-del no
# maximum size of hash, list, sorted set, or stream data structures stored in a compact list (ziplist) format in memory
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
# This controls whether Redis actively rehashes the keys space (i.e., redistributes keys across the hash table to reduce collisions and maintain performance) in the background.
activerehashing yes
# This is the server's hertz (frequency of internal operations), controlling how often Redis performs certain background tasks, such as expiring keys and closing idle connections
hz 10

# Logging
# logfile "/var/log/redis/redis.log"
# loglevel notice

# This setting causes Redis to use incremental fsyncs to save the RDB snapshot to disk, rather than doing a single fsync at the end of the save operation
rdb-save-incremental-fsync yes
# Similar to rdb-save-incremental-fsync, but for AOF persistence.
aof-rewrite-incremental-fsync yes
